---
// Select UI to switch between locales.

import { getLocalePaths, LOCALES } from '@/i18n'
import { Icon } from 'astro-icon/components'
const { updateUrl } = Astro.props
const currentLableLagauge = Astro.currentLocale || 0
---

<div>
	<!-- Language Dropdown -->
	<div class="hs-dropdown relative inline-flex [--placement:top-left]">
		<button
			data-languageSelect
			id="hs-footer-language-dropdown"
			type="button"
			class="hs-dropdown-toggle inline-flex items-center gap-x-2 rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm text-gray-800 shadow-sm hover:bg-gray-50 focus:bg-gray-50 focus:outline-none disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-700 dark:bg-neutral-900 dark:text-white dark:hover:bg-neutral-800 dark:focus:bg-neutral-800"
			aria-haspopup="menu"
			aria-expanded="false"
			aria-label="Dropdown"
		>
			<Icon name={LOCALES[currentLableLagauge].iconName} width={15} height={15} />
			{LOCALES[currentLableLagauge].label}
			<svg
				class="size-4 shrink-0 text-gray-500 hs-dropdown-open:rotate-180 dark:text-neutral-500"
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"><path d="m18 15-6-6-6 6"></path></svg
			>
		</button>

		<div
			class="hs-dropdown-menu duration z-10 hidden w-40 rounded-lg bg-white p-2 opacity-0 shadow-md transition-[opacity,margin] hs-dropdown-open:opacity-100 dark:divide-neutral-700 dark:border dark:border-neutral-700 dark:bg-neutral-800"
			role="menu"
			aria-orientation="vertical"
			aria-labelledby="hs-footer-language-dropdown"
		>
			{
				getLocalePaths(Astro.url).map(({ path, lang }) =>
					currentLableLagauge === lang ? (
						''
					) : (
						<a
							class="flex items-center gap-x-2 rounded-lg px-3 py-2 text-sm text-gray-800 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700 dark:focus:text-neutral-300"
							href={path}
							data-languageSelect
							key={lang}
							aria-label={lang}
						>
							<Icon name={LOCALES[lang].iconName} width={20} height={20} />
							{LOCALES[lang].label}
						</a>
					)
				)
			}
		</div>
	</div>
	<!-- End Language Dropdown -->
</div>

<script>
	const selects = document.querySelectorAll('[data-languageSelect]')

	selects.forEach((select) => {
		select.addEventListener('change', (event) => {
			
			// used for 404 page
			localStorage.selectedLang = event.target?.selectedOptions[0].dataset.lang
			location.href = event.target?.value
		})
	})
</script>

<style>
	label {
		position: relative;
		display: inline-block;
		width: 240px;
		text-align-last: left;
		.material-icons-sharp {
			pointer-events: none;
			position: absolute;
			color: var(--color-theme);
			&:first-child {
				font-size: 24px;
				inset: 8px auto 8px 8px;
				opacity: 0.4;
			}
			&:last-child {
				font-size: 28px;
				inset: 6px 6px 6px auto;
			}
		}
	}
	select {
		width: 100%;
		cursor: pointer;
		appearance: none;
		border-radius: 6px;
		font-family: 'Noto Sans';
		color: var(--color-main);
		background-color: var(--color-base);
		border: 2px solid var(--color-theme);
	}
</style>
